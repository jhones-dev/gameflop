type Query {
  Publishers(
    where: PublisherWhereInput
    include: PublisherIncludeInput
    orderBy: PublisherOrderByInput
    skip: Int
    take: Int
  ): PublisherArrayResult
}

type Mutation {
  AddPublisher(name: String!): PublisherOperationResult
}

union PublisherResult = Publisher | InputError | InternalError
union PublisherArrayResult = PublisherList | InputError | InternalError
union PublisherOperationResult =
    PublisherResultSuccess
  | InputError
  | InternalError

type Publisher {
  id: Int!
  name: String!
}

type PublisherList {
  publishers: [Publisher]
}

type PublisherResultSuccess {
  statusCode: String!
  message: String!
}

input PublisherInput {
  id: Int
  name: String
}

input PublisherWhereInput {
  AND: [PublisherInput]
  OR: [PublisherInput]
  NOT: [PublisherInput]
  id: Int
  name: String
}

input PublisherIncludeInput {
  _count: Boolean
  games: Boolean
}

input PublisherOrderByInput {
  id: OrderBy
  name: OrderBy
}
